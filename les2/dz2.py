def multiplication_table(n):

    table = [[i * j for j in range(1, n+1)] for i in range(1, n+1)]

    for i in range(n):
        for j in range(n):
            print(f"{i + 1} * {j + 1} = {table[i][j]}")
        print()

multiplication_table(25)

'''Обоснование
Когда речь заходит о выборе парадигмы программирования, одним из вариантов, является функциональное программирование. 
Эта парадигма основана на использовании функций и данных без изменения состояния, что позволяет более декларативно 
описывать логику программы. Функциональное программирование подразумевает работу с функциями как основными 
строительными блоками программы. Вместо изменения состояния, функции принимают входные данные и возвращают результат, 
не влияя на внешние переменные или состояние программы. Это позволяет создавать более предсказуемый и модульный код, 
который легче тестировать и поддерживать. '''